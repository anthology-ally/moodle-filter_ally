{"version":3,"sources":["../src/util.js"],"names":["define","$","whenTrue","evaluateFunction","maxIterations","dfd","Deferred","i","intervalHandle","loop","reject","clearInterval","resolve","setInterval","promise","onCoordsChange","$el","callback","lastCoords","_loop","offset","width","height","currCoords","top","left","right","bottom","contains","document","documentElement","getQuery","url","query","replace","_","key","value","decodeURI","debounce","func","wait","immediate","timeout","context","args","arguments","callNow","clearTimeout","setTimeout","later","apply"],"mappings":"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","sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * Utility lib.\n *\n * @package   filter_ally\n * @author    Guy Thomas / Branden Visser\n * @copyright Copyright (c) 2017 Blackboard Inc.\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery'], function($) {\n    return new function() {\n\n        /**\n         * When evaluateFunction returns true.\n         * @author Guy Thomas\n         * @param evaluateFunction\n         * @param maxIterations\n         * @returns {promise} jQuery promise\n         */\n        this.whenTrue = function(evaluateFunction, maxIterations) {\n\n            maxIterations = !maxIterations ? 10 : maxIterations;\n\n            var dfd = $.Deferred();\n            var i = 0;\n\n            // Maintains a handle to the interval timer, so it can be cleaned up when the element is removed.\n            var intervalHandle = null;\n\n            /*!\n             * The function that will be used to try the evaluation repeatedly.\n             */\n            var loop = function() {\n                i++;\n                if (i > maxIterations) {\n                    dfd.reject();\n                    if (intervalHandle) {\n                        // Cleanup the interval.\n                        clearInterval(intervalHandle);\n                        intervalHandle = null;\n                    }\n                    return;\n                }\n                if (evaluateFunction()) {\n                    dfd.resolve();\n                    if (intervalHandle) {\n                        // Cleanup the interval.\n                        clearInterval(intervalHandle);\n                        intervalHandle = null;\n                    }\n                    return;\n                }\n            };\n\n            intervalHandle = setInterval(loop, 200);\n\n            return dfd.promise();\n        };\n\n        /**\n         * Listen for the offset/size of a given element to change. Whenever it changes, invoke the given function.\n         * @author Branden Visser\n         * @param  {jQuery}     $el                     The element to watch\n         * @param  {Function}   callback                The function that is invoked when the coords change\n         * @param  {Object}     callback.coords         The new set of coords\n         * @param  {Number}     callback.coords.top     The top offset of the element\n         * @param  {Number}     callback.coords.right   The right offset of the element\n         * @param  {Number}     callback.coords.bottom  The bottom offset of the element\n         * @param  {Number}     callback.coords.left    The left offset of the element\n         * @api private\n         */\n        this.onCoordsChange = function($el, callback) {\n\n            // Maintains the last known set of coords\n            var lastCoords = {};\n\n            // Maintains a handle to the interval timer, so it can be cleaned up when the element is removed\n            var intervalHandle = null;\n\n            /*!\n             * The function that is continuously run to determine if there was a change in coords\n             */\n            var _loop = function() {\n                var offset = $el.offset();\n                var width = $el.width();\n                var height = $el.height();\n\n                var currCoords = {\n                    'top': offset.top,\n                    'right': offset.left + width,\n                    'bottom': offset.top + height,\n                    'left': offset.left\n                };\n\n                // Only continue if the coordinates have changed. Otherwise we do nothing\n                if (currCoords.top !== lastCoords.top || currCoords.right !== lastCoords.right ||\n                    currCoords.bottom !== lastCoords.bottom || currCoords.left !== lastCoords.left) {\n                    // Set the new set of coords\n                    lastCoords = currCoords;\n\n                    // First ensure the element is still on the DOM. If not, we're going to clean everything up here\n                    if (!$.contains(document.documentElement, $el[0])) {\n                        if (intervalHandle) {\n                            clearInterval(intervalHandle);\n                            intervalHandle = null;\n                        }\n                        return;\n                    }\n\n                    // Finally, run the callback\n                    return callback(lastCoords);\n                }\n            };\n\n            // Start the interval timer\n            intervalHandle = setInterval(_loop, 200);\n\n            // Perform an immediate initial run\n            _loop();\n        };\n\n        /**\n         * Builds an object which contains all the parameters passed in a URL.\n         * @param url URL which has parameters\n         * @returns {Object}\n         */\n        this.getQuery = function(url) {\n            var query = {};\n\n            url.replace(/[?&](.+?)=([^&#]*)/g, function (_, key, value) {\n                query[key] = decodeURI(value).replace(/\\+/g, ' ');\n            });\n\n            return query;\n        };\n\n        /**\n         * Taken from underscore.js - debounce function to prevent function spamming on event triggers.\n         * Modified by GThomas to implement deferred.\n         * @param function func\n         * @param int wait\n         * @param boolean immediate\n         * @returns Deferred\n         */\n        this.debounce = function (func, wait, immediate) {\n            var timeout;\n            return function() {\n                var dfd = $.Deferred();\n                var context = this, args = arguments;\n                var later = function() {\n                    timeout = null;\n                    if (!immediate) { dfd.resolve(func.apply(context, args)); }\n                };\n                var callNow = immediate && !timeout;\n                clearTimeout(timeout);\n                timeout = setTimeout(later, wait);\n                if (callNow) {\n                    dfd.resolve(func.apply(context, args));\n                }\n                return dfd;\n            };\n        };\n    };\n});\n"],"file":"util.min.js"}