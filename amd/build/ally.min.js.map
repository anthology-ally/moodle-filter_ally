{"version":3,"file":"ally.min.js","sources":["../src/ally.js"],"sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * Ally AX library.\n *\n * @package\n * @author    Guy Thomas\n * @copyright Copyright (c) 2016 Open LMS / 2023 Anthology Inc. and its affiliates\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport Log from 'core/log';\n\nclass Ally {\n    #config = null;\n    #token = null;\n    #baseUrl = null;\n\n    static #initialized = false;\n\n    /**\n     * Initialize the AMD module with the necessary data\n     * @param  {String} jwt    The JWT token\n     * @param  {Object} config The Ally configuration containing the Ally client id and admin URL\n     */\n    init = function(jwt, config) {\n        if (Ally.#initialized) {\n            // Already initialized - return.\n            return;\n        }\n        Ally.#initialized = true;\n        if (!config.adminurl) {\n            // Do not localise - just a debug message.\n            Log.info('The Ally admin tool is not configured with a Launch URL. Aborting JS load.');\n            return;\n        }\n\n        /**\n         * Get the base URL for a given url.\n         *\n         * e.g.,  given `https://ally.local/api/v1/20/lti/institution`, this function will return `https://ally.local`.\n         *\n         * @param  {String} url A full URL\n         * @return {String} The base URL of the given `url`.\n         */\n        const getBaseUrl = (url) => {\n            const parser = document.createElement('a');\n            parser.href = url;\n\n            let baseUrl = parser.protocol + '//' + parser.hostname;\n            if (parser.port) {\n                baseUrl += ':' + parser.port;\n            }\n\n            return baseUrl;\n        };\n\n        this.#token = jwt;\n        this.#config = config;\n        this.#baseUrl = getBaseUrl(config.adminurl);\n\n        // Load up the Ally script.\n        // Note - this is not to be cached as it is just a loader script.\n        // The target script below loads up the latest version of the amd module which does get cached.\n        $.getScript(this.#baseUrl + '/integration/moodlerooms/ally.js')\n            .fail(function() {\n                Log.error('Failed to load Ally JS');\n            });\n    };\n\n    /**\n     * Get the JWT token that can be used to authenticate the current user\n     * @return {String} The JWT token\n     */\n    token = function() {\n        return this.#token;\n    };\n\n    /**\n     * Get the Ally configuration containing the Ally client id and base URL\n     * @return {Object} The Ally configuration\n     */\n    config = function() {\n        return this.#config;\n    };\n\n    /**\n     * Get the Ally base URL\n     * @return {String} The Ally base URL\n     */\n    getAllyBaseUrl = function() {\n        return this.#baseUrl;\n    };\n}\n\nexport default new Ally();\n"],"names":["Ally","jwt","config","adminurl","info","url","parser","document","createElement","href","baseUrl","protocol","hostname","port","getBaseUrl","getScript","_classPrivateFieldGet","fail","error","this"],"mappings":"k/DA0BMA,8EACQ,iEACD,mEACE,oCASJ,SAASC,IAAKC,2EACbF,KAbNA,8WAiBEA,KAjBFA,mBAiBsB,IACfE,OAAOC,kCAEJC,KAAK,gHAwBCH,wCACCC,4CAbKG,CAAAA,YACVC,OAASC,SAASC,cAAc,KACtCF,OAAOG,KAAOJ,QAEVK,QAAUJ,OAAOK,SAAW,KAAOL,OAAOM,gBAC1CN,OAAOO,OACPH,SAAW,IAAMJ,OAAOO,MAGrBH,SAKKI,CAAWZ,OAAOC,2BAKhCY,UAAUC,qCAAgB,oCACvBC,MAAK,wBACEC,MAAM,8DAQd,wCACGC,+CAOF,wCACEA,wDAOM,wCACNA,wDAzEW,YA6EX,IAAInB"}