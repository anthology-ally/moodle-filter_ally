name: Ally automated testing

on:
  push:
  workflow_dispatch:
    inputs:
      moodlebranch:
        type: choice
        description: Select Moodle branch
        options:
        - 'MOODLE_400_STABLE'
        - 'MOODLE_401_STABLE'
        - 'MOODLE_402_STABLE'
        - 'MOODLE_403_STABLE'
        - 'MOODLE_404_STABLE'
        - 'MOODLE_405_STABLE'
        default: 'MOODLE_404_STABLE'
      phpversion:
        type: choice
        description: Select PHP version
        options:
        - '7.4'
        - '8.0'
        - '8.1'
        - '8.2'
        default: '8.1'

jobs:
  test:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
      mariadb:
        image: mariadb:10
        env:
          MYSQL_USER: 'root'
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_CHARACTER_SET_SERVER: "utf8mb4"
          MYSQL_COLLATION_SERVER: "utf8mb4_unicode_ci"

        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        php: ["${{ inputs.phpversion || '8.1' }}"]
        moodle-branch: ["${{ inputs.moodlebranch || 'MOODLE_404_STABLE' }}"]
        database: [mariadb]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          path: plugin

      - name: Setup PHP ${{ inputs.phpversion || '8.1' }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.phpversion || '8.1' }}
          extensions: ${{ matrix.extensions }}
          ini-values: max_input_vars=5000
          # none to use phpdbg fallback. Specify pcov (Moodle 3.10 and up) or xdebug to use them instead.
          coverage: none

      - name: Initialise moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^3
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          sudo locale-gen en_AU.UTF-8

      - name: Install NVM and Node
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.0/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm install 20
          nvm use 20

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: |
          branch="${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
      
          if [[ "$branch" =~ ^(MOODLE_[0-9]+_STABLE) ]]; then
            branch="${BASH_REMATCH[1]}"
          elif [[ "$branch" =~ ^(MOODLE_[0-9]+) ]]; then
            branch="${BASH_REMATCH[1]}_STABLE"
          fi
      
          echo "Extracted Moodle branch: $branch"
          echo "branch=$branch" >> $GITHUB_OUTPUT

      - name: Create citricity branch name
        id: citricity_branch
        shell: bash
        run: |
          echo "branch_citricity=$(echo '${{ steps.extract_branch.outputs.branch }}' | sed 's/STABLE/CITRICITY/')" >> $GITHUB_OUTPUT

      # See https://moodlehq.github.io/moodle-plugin-ci/AddExtraConfig.html
      # for adding extra config.php values via moodle-plugin-ci.
      - name: Install moodle-plugin-ci
        continue-on-error: false
        run: |
          echo "NOTE: Using branch ${{ steps.extract_branch.outputs.branch }}" 
          moodle-plugin-ci add-plugin --branch ${{ steps.extract_branch.outputs.branch }} --clone=https://github.com/$GITHUB_REPOSITORY_OWNER/moodle-tool_ally
          moodle-plugin-ci add-plugin --branch ${{ steps.extract_branch.outputs.branch }} --clone=https://github.com/$GITHUB_REPOSITORY_OWNER/moodle-report_allylti
          moodle-plugin-ci add-plugin --branch ${{ steps.citricity_branch.outputs.branch_citricity }} --clone=https://github.com/$GITHUB_REPOSITORY_OWNER/moodle-mod_hsuforum
          moodle-plugin-ci add-plugin --branch ${{ steps.citricity_branch.outputs.branch_citricity }} --clone=https://github.com/$GITHUB_REPOSITORY_OWNER/moodle-theme_snap
          moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1
          moodle-plugin-ci add-config '$CFG->behat_increasetimeout = 2;'
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}

#      - name: PHP Lint
#        if: ${{ always() }}
#        run: moodle-plugin-ci phplint

      - name: PHP Copy/Paste Detector
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci phpcpd

      - name: PHP Mess Detector
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci phpmd

      - name: Moodle Code Checker
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci codechecker --max-warnings 0

      - name: Moodle PHPDoc Checker
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci phpdoc

      - name: Validating
        if: ${{ always() }}
        run: moodle-plugin-ci validate

      - name: Check upgrade savepoints
        if: ${{ always() }}
        run: moodle-plugin-ci savepoints

      - name: Mustache Lint
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci mustache

      - name: Grunt
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci grunt --max-lint-warnings 0

#      - name: Setup upterm session
#        uses: lhotari/action-upterm@v1

      - name: Ally filter PHPUnit test
        if: ${{ always() }}
        run: |
          rm -rf moodledata/phpu_moodledata/cache
          moodle-plugin-ci phpunit --fail-on-warning

      - name: Ally tool PHPUnit test
        if: ${{ always() }}
        run: |
          cd moodle
          composer config --unset repositories
          composer require --dev phpspec/prophecy
          vendor/bin/phpunit --testsuite=tool_ally_testsuite
          cd ..

      - name: Ally report PHPUnit test
        if: ${{ always() }}
        run: |
          cd moodle
          vendor/bin/phpunit --testsuite=report_allylti_testsuite
          cd ..

      - name: Ally filter Behat test
        if: ${{ always() }}
        run: moodle-plugin-ci behat --profile chrome
